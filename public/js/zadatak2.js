describe ('TestoviParser', function() {
    describe('dajTacnost', function() { 
        it('All tests passed', function() {
            var string = "{\"stats\":{\"suites\":2,\"tests\":2,\"passes\":2,\"pending\":0,\"failures\":0,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should draw 3 rows when parameter are 2,3\",\"fullTitle\":\"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should draw 2 columns in row 2 when parameter are 2,3\",\"fullTitle\":\"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[],\"passes\":[{\"title\":\"should draw 3 rows when parameter are 2,3\",\"fullTitle\":\"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should draw 2 columns in row 2 when parameter are 2,3\",\"fullTitle\":\"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}"
            var rezultat = TestoviParser.dajTacnost(string);
            assert.equal(rezultat.tacnost, "100%");
            assert.equal(rezultat.greske, "[]");
        });
        it('All tests failed', function() {
                var string = "{\"stats\": {\"suites\": 2,\"tests\": 2,\"passes\": 0,\"pending\": 0, \"failures\": 2, \"start\": \"2021-11-22T14:26:18.346Z\",\"end\": \"2021-11-22T14:26:18.352Z\",\"duration\": 6  }, \"tests\": [ {\"title\": \"should draw 3 rows when parameter are 2,3\",\"fullTitle\": \"\Tabela crtaj() should draw 3 rows when parameter are 2,3\",\"file\": null,\"duration\": 1, \"currentRetry\": 0,\"err\": {\"message\": \"Broj redova treba biti 3: expected 2 to equal 3\",\"showDiff\": true, \"actual\": \"2\", \"expected\": \"3\",\"operator\": \"strictEqual\",    \"stack\": \"AssertionError: Broj redova treba biti 3: expected 2 to equal 3  at Context.<anonymous> (test.js:9:13)\"}},{ \"title\": \"should draw 2 columns in row 2 when parameter are 2,3\",\"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\", \"file\": null, \"duration\": 0, \"currentRetry\": 0, \"err\": {\"stack\": \"TypeError: Cannot read properties of undefined (reading 'getElementsByTagName')    at Context.<anonymous> (test.js:16:31)\",  \"message\": \"Cannot read properties of undefined (reading 'getElementsByTagName')\" } }  ], \"pending\": [], \"failures\": [ { \"title\": \"should draw 3 rows when parameter are 2,3\", \"fullTitle\": \"Tabela crtaj() should draw 3 rows when parameter are 2,3\", \"file\": null,\"duration\": 1, \"currentRetry\": 0,\"err\": { \"message\": \"Broj redova treba biti 3: expected 2 to equal 3\",\"showDiff\": true,\"actual\": \"2\",\"expected\": \"3\", \"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj redova treba biti 3: expected 2 to equal 3  at Context.<anonymous> (test.js:9:13)\" }},  { \"title\": \"should draw 2 columns in row 2 when parameter are 2,3\", \"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\"file\": null,\"duration\": 0,\"currentRetry\": 0,\"err\": {  \"stack\": \"TypeError: Cannot read properties of undefined (reading 'getElementsByTagName')   at Context.<anonymous> (test.js:16:31)\",  \"message\": \"Cannot read properties of undefined (reading 'getElementsByTagName')\"   }} ],\"passes\": []}"
                var rezultat = TestoviParser.dajTacnost(string);
                assert.equal(rezultat.tacnost, "0%");
                assert.equal(rezultat.greske,"[Tabela crtaj() should draw 3 rows when parameter are 2,3,Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3]")
        });
        it('Only first test passed', function() {
                var string = "{\"stats\": {\"suites\": 2,\"tests\": 2,\"passes\": 1,\"pending\": 0,\"failures\": 1,\"start\": \"2021-11-22T14:44:13.014Z\",\"end\": \"2021-11-22T14:44:13.019Z\",\"duration\": 5},\"tests\": [{ \"title\": \"should draw 3 rows when parameter are 2,3\", \"fullTitle\": \"Tabela crtaj() should draw 3 rows when parameter are 2,3\", \"file\": null,\"duration\": 1,\"currentRetry\": 0,\"speed\": \"fast\",\"err\": {} }, { \"title\": \"should draw 2 columns in row 2 when parameter are 2,3\",  \"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\", \"file\": null, \"duration\": 1,\"currentRetry\": 0,\"err\": {\"message\": \"Broj kolona treba biti 2: expected 1 to equal 2\",\"showDiff\": true,\"actual\": \"1\",\"expected\": \"2\",\"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj kolona treba biti 2: expected 1 to equal 2   at Context.<anonymous> (test.js:22:15)\"}}  ],\"pending\": [],\"failures\": [ { \"title\": \"should draw 2 columns in row 2 when parameter are 2,3\",  \"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\"file\": null,  \"duration\": 1,\"currentRetry\": 0,      \"err\": {\"message\": \"Broj kolona treba biti 2: expected 1 to equal 2\",\"showDiff\": true,\"actual\": \"1\",\"expected\": \"2\",\"operator\": \"strictEqual\", \"stack\": \"AssertionError: Broj kolona treba biti 2: expected 1 to equal 2    at Context.<anonymous> (test.js:22:15)\" } }],\"passes\": [{\"title\": \"should draw 3 rows when parameter are 2,3\", \"fullTitle\": \"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\"file\": null, \"duration\": 1, \"currentRetry\": 0,\"speed\": \"fast\",\"err\": {}  } ]}"
                var rezultat = TestoviParser.dajTacnost(string);
                assert.equal(rezultat.tacnost, "50%");
                assert.equal(rezultat.greske, "[Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3]");
        });
        it('Only second test passed', function() {
                var string = "{\"stats\": {\"suites\": 2,\"tests\": 2,\"passes\": 1,\"pending\": 0,\"failures\": 1,\"start\": \"2021-11-22T15:28:42.410Z\",\"end\": \"2021-11-22T15:28:42.418Z\",\"duration\": 8},\"tests\": [{\"title\": \"should draw 3 rows when parameter are 2,3\",\"fullTitle\": \"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\"file\": null,\"duration\": 1,\"currentRetry\": 0,\"err\": {\"message\": \"Broj redova treba biti 3: expected 4 to equal 3\", \"showDiff\": true,\"actual\": \"4\", \"expected\": \"3\", \"operator\": \"strictEqual\",\"stack\": \"AssertionError: Broj redova treba biti 3: expected 4 to equal 3    at Context.<anonymous> (test.js:9:13)\"}}, {\"title\": \"should draw 2 columns in row 2 when parameter are 2,3\",\"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\"file\": null,\"duration\": 0,\"currentRetry\": 0,\"speed\": \"fast\",\"err\": {}}],\"pending\": [], \"failures\": [ {\"title\": \"should draw 3 rows when parameter are 2,3\",\"fullTitle\": \"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\"file\": null,\"duration\": 1,\"currentRetry\": 0,  \"err\": { \"message\": \"Broj redova treba biti 3: expected 4 to equal 3\",\"showDiff\": true,\"actual\": \"4\",\"expected\": \"3\",\"operator\": \"strictEqual\", \"stack\": \"AssertionError: Broj redova treba biti 3: expected 4 to equal 3    at Context.<anonymous> (test.js:9:13)\"} } ],\"passes\": [   {  \"title\": \"should draw 2 columns in row 2 when parameter are 2,3\",      \"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\", \"file\": null,\"duration\": 0,\"currentRetry\": 0, \"speed\": \"fast\",\"err\": {}} ]}"
                var rezultat = TestoviParser.dajTacnost(string);
                assert.equal(rezultat.tacnost, "50%");
                assert.equal(rezultat.greske, "[Tabela crtaj() should draw 3 rows when parameter are 2,3]")
        });
        it('Tests cannot be executed', function() {
            var string = "{\"stats\": {\"suites\": 0,\"tests\": 0,\"passes\": 0,\"pending\": 0,\"failures\": 0,  \"start\": \"2021-11-22T16:50:35.696Z\", \"end\": \"2021-11-22T16:50:35.697Z\",\"duration\": 1}, \"tests\": [], \"pending\": [],\"failures\": [],\"passes\": []}"
            var rezultat = TestoviParser.dajTacnost(string);
            assert.equal(rezultat.tacnost, "0%");
            assert.equal(rezultat.greske, "[Testovi se ne mogu izvršiti]");
        });
        it('Tests JSON String not correct', function() {
            var string = "{\"stats\":\"tests\":2,\"passes\":2,\"pending\":0,\"failures\":0,\"start\":\"2021-11-05T15:00:26.343Z\",\"end\":\"2021-11-05T15:00:26.352Z\",\"duration\":9},\"tests\":[{\"title\":\"should draw 3 rows when parameter are 2,3\",\"fullTitle\":\"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should draw 2 columns in row 2 when parameter are 2,3\",\"fullTitle\":\"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}],\"pending\":[],\"failures\":[],\"passes\":[{\"title\":\"should draw 3 rows when parameter are 2,3\",\"fullTitle\":\"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\"file\":null,\"duration\":1,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}},{\"title\":\"should draw 2 columns in row 2 when parameter are 2,3\",\"fullTitle\":\"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\"file\":null,\"duration\":0,\"currentRetry\":0,\"speed\":\"fast\",\"err\":{}}]}"
            var rezultat = TestoviParser.dajTacnost(string);
            assert.equal(rezultat.tacnost, "0%");
            assert.equal(rezultat.greske, "[Testovi se ne mogu izvršiti]");
        });
    });
});